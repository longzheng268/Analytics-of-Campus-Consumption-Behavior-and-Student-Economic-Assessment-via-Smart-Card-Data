name: 校园消费分析系统 CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test module imports
      run: |
        python -c "
        import sys
        sys.path.append('.')
        from core.data_loader import DataLoader
        from core.preprocessor import DataPreprocessor
        from core.visualizer import Visualizer
        from core.model import ConsumptionModel
        from configs.settings import Config
        print('✅ All core modules imported successfully')
        "
    
    - name: Run pytest tests
      run: |
        pytest tests/ -v --tb=short
    
    - name: Test Streamlit app syntax
      run: |
        python -m py_compile app.py
        echo "✅ Streamlit app syntax is valid"
    
    - name: Check data files exist
      run: |
        if [ -f "data/data1.csv" ] && [ -f "data/data2.csv" ]; then
          echo "✅ Data files are present"
        else
          echo "⚠️ Warning: Data files not found, but this is expected for CI"
        fi

  streamlit-health-check:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Streamlit health check
      run: |
        # Check if streamlit can start without errors (dry run)
        timeout 30s streamlit run app.py --server.headless true --server.port 8501 &
        sleep 10
        if pgrep -f "streamlit run" > /dev/null; then
          echo "✅ Streamlit app can start successfully"
          pkill -f "streamlit run"
        else
          echo "❌ Streamlit app failed to start"
          exit 1
        fi
